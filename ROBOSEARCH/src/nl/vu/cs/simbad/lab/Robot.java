// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package nl.vu.cs.simbad.lab;

import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;

import javax.vecmath.Point3d;
import javax.vecmath.Vector3d;

import simbad.sim.Agent;
import simbad.sim.CameraSensor;
import simbad.sim.RangeSensorBelt;
import simbad.sim.RobotFactory;

class Robot extends Agent
{
	 private RangeSensorBelt bumper;
	 private CameraSensor camera;
	 private Driver myDriver;
	 private int driveMode;
	 private ArrayList <BufferedImage> images;
	
	 public Robot(Vector3d position, String name, Driver d, Photographer p) {
		 super(position, name);
		 d.assignRobot(this);
		 p.assignRobot(this);
		 this.myDriver = d;
		 bumper = RobotFactory.addBumperBeltSensor(this, 360);
		 camera = RobotFactory.addCameraSensor(this);
		 this.camera.setCanBeTraversed(true);
		 this.camera.setUpdateOnEachFrame(true);
		 this.driveMode= 0;
		 this.images = new ArrayList<BufferedImage>();
	 }
	 
	 public BufferedImage takePhoto(){
		 this.camera.createInspectorPanel();
		 BufferedImage fullImage = this.camera.createCompatibleImage();
		 this.camera.copyVisionImage(fullImage);
		 return fullImage;
	 }

	 @Override
	 public void initBehavior() {
		 this.setTranslationalVelocity(0.5);
	 }

	 @Override
	 public void performBehavior() {
	 	 if(this.collisionDetected() && (this.driveMode == 1 || this.driveMode == 0)) {
	 		 this.setTranslationalVelocity(0);
	 		 this.setRotationalVelocity(0);
	 		 this.images.clear();
	 		 this.driveMode = 2;
	 		 
	 	 }else if(this.collisionDetected() && this.driveMode == 3) {
	 		 this.setTranslationalVelocity(0);
	 		 this.setRotationalVelocity(Math.PI / 2);
	 		 
	 	 }else if(getCounter() % 20 == 0 && this.driveMode == 2){
	 		 this.setRotationalVelocity(0);
	 		 this.images.add(this.takePhoto());
	 		 if(this.images.size() == 10){
	 		 	this.myDriver.hitDetected();
	 		 }
	 		 this.rotateY(0.62);
	 	 }else {
	 		 if(this.driveMode == 3){
	 			 this.setRotationalVelocity(0);
	 			 this.driveMode = 0;
	 		 }
	 		 move();
	 	 }
	 }
	
	 public void setDriveMode(int x){
		 this.driveMode = x;
	 }
	 
	 public void move() {
	 	 if(this.driveMode == 0){
	 		 this.setTranslationalVelocity(0.5);
	 		 if(getCounter() % 100 == 0) {
	 	 		this.setRotationalVelocity(Math.PI /2 * (0.5 - Math.random()));
	 	 	 }
	 	 }
	 }
	 
	 public Point3d getPosition(){
		 Point3d position = new Point3d();
		 this.getCoords(position);
		 return position;
	 }
	 public ArrayList<BufferedImage> takePhotos(){
		 return this.images;
	 }
};
